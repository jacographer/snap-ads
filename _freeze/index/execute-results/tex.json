{
  "hash": "5a356f0c07029035b166805c9503d7f6",
  "result": {
    "markdown": "---\ntitle: \"A&S 500 Final Project\"\nauthor:\n  - name: \"Jacob Saindon\" #splitting should work in new versions of Quarto\n    url: \"https://jacographer.com/\"\n    orcid: 0000-0002-3808-9704\n    affiliations:\n      - name: \"University of Kentucky\"\ncitation:\n  url: \"https://jacographer.com/\"\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    fig-height: 5\n    fig-width: 3\n    fig-align: center\n    cap-location: margin\nexecute:\n  freeze: auto  # re-render only when source changes\nformat:\n  html:\n    theme: \n      - flatly\n      - custom.scss\n    toc: true\n    toc-depth: 3\n    toc-location: left #'body' goes into the top of doc\n    toc-title: \"Sections\"\n    title-block-banner: true\n    #title-block-style: plain\n    backgroundcolor: \"green\"\n    fontcolor: \"purple\"\n    include-in-header: google-font.html #file included in final proj.\n    mainfont: Atkinson Hyperlegible\n  docx: default\n  pdf: default\n    #toc: true\npdf-engine: pdflatex #necessary for this R server.\n---\n\n\n## Loading Packages\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\ninstall.packages(\"gt\")\ninstall.packages(\"htmltools\")\n```\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(gt)\n```\n:::\n\n\n## Data\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap <- read_csv(\"data/snap_political_20.csv\")\n```\n:::\n\n\n## Tidying\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap |>\n  filter(\n    CountryCode == \"united states\",\n    !is.na(Interests),\n    !is.na(`Regions (Included)`)\n  ) |>\n  mutate(\n    STATE_INC = str_split(`Regions (Included)`, \",\")\n    ) |>\n  unnest(cols = STATE_INC) -> snap_states\n\nsnap_states |>\n  mutate(\n    S_MONTH = month(StartDate, label = TRUE, abbr = TRUE)) -> snap_sm\n\nsnap_sm |>\n  mutate(\n    TARGET = str_split(`Interests`, \",\")\n    ) |>\n    unnest(cols = TARGET) -> snap_unnest\n```\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_unnest |>\n  summarise(\n      .by = c(STATE_INC,TARGET,S_MONTH),\n      TOTAL = n()) |>\n  mutate(\n    id = row_number()) -> snap_tidy # all states, interests, and months in separate rows\n\nsnap_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,065 x 5\n   STATE_INC  TARGET                                S_MONTH TOTAL    id\n   <chr>      <chr>                                 <ord>   <int> <int>\n 1 California Advocates & Activists                 Sep        20     1\n 2 California Bookworms & Avid Readers              Sep        20     2\n 3 California Collegiates                           Sep        20     3\n 4 California Investors & Entrepreneurs             Sep        20     4\n 5 California Money Minders                         Sep        20     5\n 6 California News Watchers                         Sep        20     6\n 7 California Philanthropists                       Sep        20     7\n 8 California TV Network Viewers (CNN)              Sep        20     8\n 9 California TV Network Viewers (FOX News Channel) Sep        20     9\n10 California TV Network Viewers (MSNBC)            Sep        20    10\n# i 2,055 more rows\n```\n:::\n:::\n\n\n## Data Summaries\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_sm\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2,230 x 40\n   ADID          CreativeUrl `Currency Code` Spend Impressions StartDate EndDate\n   <chr>         <chr>       <chr>           <dbl>       <dbl> <chr>     <chr>  \n 1 7652fe9f1e45~ https://ww~ USD             56423    18413015 2020/09/~ 2020/1~\n 2 c68426091abf~ https://ww~ USD             50478    16525973 2020/09/~ 2020/1~\n 3 ef900766a7e9~ https://ww~ USD             42543    14095083 2020/09/~ 2020/1~\n 4 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n 5 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n 6 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n 7 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n 8 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n 9 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n10 35a5ec450278~ https://ww~ USD             33743     9883322 2020/10/~ 2020/1~\n# i 2,220 more rows\n# i 33 more variables: OrganizationName <chr>, BillingAddress <chr>,\n#   CandidateBallotInformation <chr>, PayingAdvertiserName <chr>,\n#   CommitteeName <lgl>, CommitteeIdentificationNumber <lgl>,\n#   DisclosureNameOfCommittee <lgl>, AdvertisingJurisdiction <lgl>,\n#   Gender <chr>, AgeBracket <chr>, CountryCode <chr>,\n#   `Regions (Included)` <chr>, `Regions (Excluded)` <chr>, ...\n```\n:::\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_sm |>\n  group_by(STATE_INC) |>\n  summarise(\n    COUNT = n()) |>\n  arrange(-COUNT) -> state_count\n\n # count of ads run by state\n```\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_sm |>\n    filter(\n    STATE_INC == \"North Carolina\" | STATE_INC == \"Arizona\" | STATE_INC == \"Georgia\" | STATE_INC == \"Florida\" | STATE_INC == \"Michigan\" | STATE_INC == \"Pennsylvania\" | STATE_INC == \"Wisconsin\" | STATE_INC == \"Virginia\" | STATE_INC == \"Maine\" | STATE_INC == \"Iowa\") |>\n  group_by(STATE_INC, S_MONTH)|>\n  summarise(\n    COUNT = n()) |>\n  arrange(-COUNT) -> sm_count\n\nsm_count # count of ads run by state, per month\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 87 x 3\n# Groups:   STATE_INC [10]\n   STATE_INC      S_MONTH COUNT\n   <chr>          <ord>   <int>\n 1 North Carolina Sep        70\n 2 Arizona        Oct        41\n 3 Michigan       Sep        38\n 4 Pennsylvania   Sep        37\n 5 North Carolina Oct        36\n 6 Georgia        Nov        35\n 7 Wisconsin      Oct        30\n 8 Florida        Oct        29\n 9 Arizona        Aug        28\n10 Georgia        Dec        25\n# i 77 more rows\n```\n:::\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsm_count |>\nggplot(aes(x=S_MONTH, y=COUNT))+\n  geom_col()+\n  facet_wrap(~STATE_INC) # volume of ads launching per state\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-9-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_tidy |>\n  group_by(STATE_INC, S_MONTH) |>\n  summarise(TOTAL = sum(TOTAL)) |>\n  arrange(-TOTAL) -> sm_sum # total number of audiences targeted by all ads, per state, per month\n\nsm_sum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 297 x 3\n# Groups:   STATE_INC [51]\n   STATE_INC      S_MONTH TOTAL\n   <chr>          <ord>   <int>\n 1 Arizona        Oct       736\n 2 Pennsylvania   Sep       434\n 3 Wisconsin      Oct       386\n 4 Michigan       Sep       380\n 5 Florida        Mar       258\n 6 Florida        Feb       237\n 7 Arizona        Sep       231\n 8 North Carolina Oct       218\n 9 California     Sep       204\n10 Georgia        Nov       159\n# i 287 more rows\n```\n:::\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_tidy |>\n  group_by(TARGET, S_MONTH) |>\n  summarise(\n    SUM = sum(TOTAL)) |>\n  arrange(-SUM) -> tm_sum # total number of ads including a given parameter, per month\n\ntm_sum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 451 x 3\n# Groups:   TARGET [189]\n   TARGET                       S_MONTH   SUM\n   <chr>                        <ord>   <int>\n 1 Political News Watchers      Feb       420\n 2 Green Living Enthusiasts     Feb       414\n 3 Bookworms & Avid Readers     Feb       408\n 4 Outdoor & Nature Enthusiasts Feb       408\n 5 Political News Watchers      Aug       293\n 6 Advocates & Activists        Apr       176\n 7 Political News Watchers      Apr       176\n 8 Political News Watchers      Jul       151\n 9 Advocates & Activists        Jul       150\n10 TV Network Viewers (CNN)     Jul       143\n# i 441 more rows\n```\n:::\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_tidy |>\n  group_by(TARGET, STATE_INC) |>\n  summarise(\n    SUM = sum(TOTAL)) |>\n  arrange(-SUM) -> ts_sum # total number of ads including a given parameter, per state\n\nts_sum\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,336 x 3\n# Groups:   TARGET [189]\n   TARGET                  STATE_INC        SUM\n   <chr>                   <chr>          <int>\n 1 Political News Watchers Arizona           71\n 2 Advocates & Activists   Arizona           66\n 3 Political News Watchers Pennsylvania      63\n 4 Political News Watchers Michigan          61\n 5 Political News Watchers North Carolina    61\n 6 Political News Watchers Georgia           60\n 7 Advocates & Activists   Michigan          59\n 8 Advocates & Activists   North Carolina    57\n 9 Political News Watchers Maine             57\n10 Advocates & Activists   Georgia           55\n# i 1,326 more rows\n```\n:::\n:::\n\n\n## Top Interests by State and Month\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nsnap_tidy |>\n  slice_max(TOTAL, by = c(STATE_INC, S_MONTH)) -> max_list # all top interests per state, per month\n\nmax_list\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 752 x 5\n   STATE_INC  TARGET                                S_MONTH TOTAL    id\n   <chr>      <chr>                                 <ord>   <int> <int>\n 1 California Advocates & Activists                 Sep        20     1\n 2 California Bookworms & Avid Readers              Sep        20     2\n 3 California Collegiates                           Sep        20     3\n 4 California Investors & Entrepreneurs             Sep        20     4\n 5 California Money Minders                         Sep        20     5\n 6 California News Watchers                         Sep        20     6\n 7 California Philanthropists                       Sep        20     7\n 8 California TV Network Viewers (CNN)              Sep        20     8\n 9 California TV Network Viewers (FOX News Channel) Sep        20     9\n10 California TV Network Viewers (MSNBC)            Sep        20    10\n# i 742 more rows\n```\n:::\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\nmax_list |>\n  group_by(STATE_INC, S_MONTH) |>\n  subset(select = c(STATE_INC, S_MONTH, TARGET)) |>\n    nest(.key = \"TOP_TARGET\") |>\n  arrange(S_MONTH, STATE_INC) -> top_snap\n\ntop_snap # column with list (tibble) of top interests by per state, per month\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 297 x 3\n# Groups:   STATE_INC, S_MONTH [297]\n   STATE_INC      S_MONTH TOP_TARGET      \n   <chr>          <ord>   <list>          \n 1 California     Jan     <tibble [2 x 1]>\n 2 Florida        Jan     <tibble [2 x 1]>\n 3 Georgia        Jan     <tibble [2 x 1]>\n 4 Illinois       Jan     <tibble [2 x 1]>\n 5 Iowa           Jan     <tibble [4 x 1]>\n 6 Nevada         Jan     <tibble [7 x 1]>\n 7 New Hampshire  Jan     <tibble [4 x 1]>\n 8 New York       Jan     <tibble [2 x 1]>\n 9 North Carolina Jan     <tibble [2 x 1]>\n10 Ohio           Jan     <tibble [2 x 1]>\n# i 287 more rows\n```\n:::\n:::\n\n\n## Plotting\n\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\n# month_max |> \n#   ggplot(aes(S_MONTH, MAX, fill = STATE_INC))+\n#   geom_col()+\n#   theme(legend.position=\"none\") \n```\n:::\n\n::: {.cell .caption-margin}\n\n```{.r .cell-code}\n#data |>\n#group by (month, state, interest) |>\n#summarise (n == n()) |>\n#filter (n==max(n)) |>\n#select(-month)\n#maxes |>\n#leftjoin(data)\n```\n:::\n\n\nText analysis of targeting categories, by state.\n\nUnnest both \"Regions\" and \"Interest\" fields to get tidy.\n\n#dlxs are oracle datalogix audiences? https://businesshelp.snapchat.com/s/article/custom-audiences?language=en_US\n\ntargetsmart and i360: https://www.axios.com/2022/09/08/snap-voter-data-republican-democrats\n\nGeographic Scales:\n\n1.  Region (State)\n    -   Inclusions\n\n    -   Exclusions\n\n    -   Total Ads\n\n    -   Total Spend\n\n    -   Total Impressions\n\n    -   Interests (text analysis)\n2.  Metros (City)\n    -   Inclusions\n\n    -   Exclusions\n\n    -   Total Ads\n\n    -   Total Spend\n\n    -   Total Impressions\n\n    -   Interests (text analysis)\n3.  Postal Codes (Zip)\n    -   Inclusions\n\n    -   Exclusions\n\n    -   Total Ads\n\n    -   Total Spend\n\n    -   Total Impressions\n\n    -   Interests (text analysis)\n4.  Location Categories\n    -   Inclusions\n\n    -   Exclusions\n\n    -   Total Ads\n\n    -   Total Spend\n\n    -   Total Impressions\n\n    -   Interests (text analysis)\n5.  Electoral Districts\n    -   Inclusions\n\n    -   Exclusions\n\n    -   Total Ads\n\n    -   Total Spend\n\n    -   Total Impressions\n\n    -   Interests (text analysis)\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}